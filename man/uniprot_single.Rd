% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/uniprot_single.R
\name{uniprot_single}
\alias{uniprot_single}
\title{Download a single UniProt entry}
\usage{
uniprot_single(
  id,
  database = "uniprotkb",
  format = "json",
  path = NULL,
  fields = NULL,
  isoform = NULL,
  verbosity = NULL,
  max_tries = 5,
  rate = 1/1,
  dry_run = FALSE
)
}
\arguments{
\item{id}{\code{string}, entry ID. Form depends on database e.g. \code{"P12345"} for
UniProtKB, \code{"UPI0000128BBF"} for UniParc, etc.}

\item{database}{\code{string}, database to look up. Default is \code{"uniprotkb"}.
See the \strong{Databases} section below for all available databases.}

\item{format}{\code{string}, data format to fetch. Default is \code{"json"}.
Can be one of \code{"tsv"}, \code{"json"}, or \code{"fasta"}.}

\item{path}{Optional \code{string}, file path to save the results, e.g.
\code{"path/to/results.tsv"}.}

\item{fields}{Optional \code{character}, fields (i.e. columns) of data to get.
The fields available depends on the database used, see \link{return_fields}
for all available fields.}

\item{isoform}{Optional \code{logical}, should protein isoforms be included in the
results? Not necessarily relevant for all formats and databases.}

\item{verbosity}{How much information to print? This is a wrapper
around \code{req_verbose()} that uses an integer to control verbosity:
\itemize{
\item 0: no output
\item 1: show headers
\item 2: show headers and bodies
\item 3: show headers, bodies, and curl status messages.
}

Use \code{\link[httr2:with_verbosity]{with_verbosity()}} to control the verbosity of requests that
you can't affect directly.}

\item{max_tries}{\code{integer}, the number of maximum attempts to perform the
HTTP request. Default is \code{5}.}

\item{rate}{\code{numeric}, the maximum number of requests per second. Default is
\code{1 / 1} i.e. 1 request per 1 second.}

\item{dry_run}{\code{logical}, perform request with \code{\link[httr2:req_dry_run]{httr2::req_dry_run()}}?
Requires the \code{httpuv} package to be installed. Default is \code{FALSE}.}
}
\value{
By default, returns an object whose type depends on \code{format}:
\itemize{
\item \strong{\code{tsv}}: \code{data.frame}
\item \strong{\code{json}}: \code{list}
\item \strong{\code{fasta}}: \link[Biostrings:XStringSet-class]{Biostrings::AAStringSet} (or \verb{named character} if
Biostrings not installed)
}

If \code{path} is specified, saves the results to the file path indicated,
and returns \code{NULL} invisibly. If \code{dry_run = TRUE}, returns a
list containing information about the request, including the request
\code{method}, \code{path}, and \code{headers}.
}
\description{
Get a single entry from UniProt.
By default it fetches the webpage using \code{format = "json"} and outputs a
list of information, but different formats are available from different
databases. It is a wrapper for
\href{https://www.uniprot.org/help/api_retrieve_entries}{this} UniProt API
endpoint.
}
\section{Databases}{


The following databases are available to query:
\itemize{
\item \strong{\code{uniprotkb}}: \href{https://www.uniprot.org/help/uniprotkb}{UniProt Knowledge Base}
\item \strong{\code{uniref}}: \href{https://www.uniprot.org/help/uniref}{UniProt Reference Clusters}
\item \strong{\code{uniparc}}: \href{https://www.uniprot.org/help/uniparc}{UniProt Archive}
\item \strong{\code{proteomes}}: \href{https://www.uniprot.org/help/reference_proteome}{Reference proteomes}
\item \strong{\code{taxonomy}}: \href{https://www.uniprot.org/help/taxonomy}{Taxonomy}
\item \strong{\code{keywords}}: \href{https://www.uniprot.org/help/keywords}{Keywords}
\item \strong{\code{citations}}: \href{https://www.uniprot.org/help/literature_references}{Literature references}
\item \strong{\code{diseases}}: \href{https://www.uniprot.org/help/disease_query}{Disease queries}
\item \strong{\code{database}}: \href{https://www.uniprot.org/help/cross_references_section}{Cross references}
\item \strong{\code{locations}}: \href{https://www.uniprot.org/help/subcellular_location}{Subcellular location}
\item \strong{\code{unirule}}: \href{https://www.uniprot.org/help/unirule}{UniRule}
\item \strong{\code{arba}}: \href{https://www.uniprot.org/help/automatic_annotation}{ARBA}
(Association-Rule-Based Annotator)
}
}

\examples{
\dontrun{
  # Download the entry for human Cytochrome C
  res <- uniprot_single("P99999", format = "json")

  # Look at the structure of the resulting list
  str(res, max.level = 1)
}
}
\seealso{
Other API wrapper functions: \code{\link[=uniprot_map]{uniprot_map()}}, \code{\link[=uniprot_search]{uniprot_search()}}
}
