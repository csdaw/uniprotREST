% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resp_body_tsv.R
\name{resp_body_tsv}
\alias{resp_body_tsv}
\title{Extract tab-delimited data from response body}
\usage{
resp_body_tsv(resp, page = NULL, con = NULL, encoding = NULL)
}
\arguments{
\item{resp}{\code{httr2_response} object, generated by e.g. \code{\link[httr2:req_perform]{httr2::req_perform()}} or
\code{\link[=fetch_stream]{fetch_stream()}}/\code{\link[=fetch_paged]{fetch_paged()}}.}

\item{page}{\code{integer} (optional), response page number. If \code{page} > 1 then
the table header is removed before saving to file. Only used when \code{con} is
specified.}

\item{con}{\code{string} or \link[base:connections]{base::connection} object (optional), the file in which
to save the data.}

\item{encoding}{\code{string} (optional), character encoding of the body text. If
not specified, will use the encoding specified by the content-type, falling
back to \code{"UTF8"} with a warning if it cannot be found. The resulting string
is always re-encoded to UTF-8.}
}
\value{
By default, returns a \code{data.frame}. If \code{con} is not NULL, returns
nothing and saves tab-delimited text to the file specified by \code{con}.
}
\description{
This function gets tab-delimited data from an \code{httr2_response}
and either saves it to a file or parses it into a \code{data.frame} in memory.
}
\examples{
resp <- structure(
  list(method = "GET", url = "https://example.com",
       body = charToRaw("Entry\tGene Names (primary)\nP99999\tCYCS\n")),
  class = "httr2_response"
)

resp_body_tsv(resp)

}
