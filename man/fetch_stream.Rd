% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetch_stream.R
\name{fetch_stream}
\alias{fetch_stream}
\title{Fetch results via stream}
\usage{
fetch_stream(req, format = "tsv", parse = TRUE, path = NULL, verbosity = NULL)
}
\arguments{
\item{req}{\code{httr2_request} object, generated by e.g. \code{\link[httr2:request]{httr2::request()}} or
\code{\link[=uniprot_request]{uniprot_request()}}.}

\item{format}{\code{string}, data format to fetch. Can be one of \code{"tsv"}, \code{"json"}
or \code{"fasta"}.}

\item{parse}{\code{logical}, should the response body be parsed e.g. into a \code{data.frame}
or should the \code{httr2_response} object be returned instead? Default is \code{TRUE}.
Does nothing if \code{path} is provided.}

\item{path}{\code{string} (optional), file path to save the results, e.g.
\code{"path/to/results.tsv"}. The file must not already exist, otherwise an
error is thrown.}

\item{verbosity}{\code{integer} (optional), how much information to print?
\itemize{
\item 0: no output
\item NULL (default): minimal output
\item 1: show request headers
\item 2: show request headers and bodies
\item 3: show request headers, bodies, and curl status messages
}}
}
\value{
By default, returns an object whose type depends on \code{format}:
\itemize{
\item \strong{\code{tsv}}: \code{data.frame}
\item \strong{\code{json}}: \code{list}
\item \strong{\code{fasta}}: \link[Biostrings:XStringSet-class]{Biostrings::AAStringSet} (or \verb{named character} if
Biostrings not installed)
}

If \code{parse = FALSE}, returns an \code{httr2_response}. If \code{path} is specified,
saves the parsed results to the file path indicated, and returns \code{NULL}
invisibly.
}
\description{
This function performs a request for data from the UniProt REST
API, fetches the results using the stream endpoint, and saves them to a
file or into memory.

You likely won't use this function directly, but rather one of the
wrapper functions: \code{\link[=uniprot_map]{uniprot_map()}}, \code{\link[=uniprot_search]{uniprot_search()}}, or \code{\link[=uniprot_single]{uniprot_single()}}.
\subsection{Things to note:}{
\enumerate{
\item The stream endpoint is expensive for the API to process. If this endpoint
has too many requests a \code{429} status error will occur. In this case use
\code{\link[=fetch_paged]{fetch_paged()}} or try again later.
\item Up to 10,000,000 results can be fetched via stream. If you want to get
more results you should use \code{\link[=fetch_paged]{fetch_paged()}}, or consider downloading
some datasets from UniProt's FTP website.
}
}
}
\examples{
\dontrun{
  req <- uniprot_request(
    "https://rest.uniprot.org/uniref/stream",
    query = "P99999",
    format = "tsv",
    fields = "id,name,count"
  )

  fetch_stream(req)
}
}
