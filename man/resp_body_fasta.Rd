% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resp_body_fasta.R
\name{resp_body_fasta}
\alias{resp_body_fasta}
\title{Extract FASTA data from response body}
\usage{
resp_body_fasta(resp, con = NULL, encoding = NULL)
}
\arguments{
\item{resp}{\code{httr2_response} object, generated by e.g. \code{\link[httr2:req_perform]{httr2::req_perform()}} or
\code{\link[=fetch_stream]{fetch_stream()}}/\code{\link[=fetch_paged]{fetch_paged()}}.}

\item{con}{Optional \code{string} or \link[base:connections]{base::connection} object, the file in which
to save the data.}

\item{encoding}{Character encoding of the body text. If not specified,
will use the encoding specified by the content-type, falling back to
UTF-8 with a warning if it cannot be found. The resulting string is
always re-encoded to UTF-8.}
}
\value{
By default, returns a \link[Biostrings:XStringSet-class]{Biostrings::AAStringSet} object. If the
\code{Biostrings} package is not installed, returns a \verb{named character} vector.
If \code{con} is not NULL, returns nothing and saves the FASTA sequences to the
file specified by \code{con}.
}
\description{
This function gets FASTA data from an \code{httr2_response}
and either saves it to a file or parses it in memory into a
\link[Biostrings:XStringSet-class]{Biostrings::AAStringSet} or \verb{named character} vector.
}
\examples{
resp <- structure(
  list(method = "GET", url = "https://example.com",
       body = charToRaw(">Protein1\nAAA\n>Protein2\nCCC")),
  class = "httr2_response"
)

resp_body_fasta(resp)

}
